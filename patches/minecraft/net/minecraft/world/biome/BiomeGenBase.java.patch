--- ../src-base/minecraft/net/minecraft/world/biome/BiomeGenBase.java
+++ ../src-work/minecraft/net/minecraft/world/biome/BiomeGenBase.java
@@ -42,6 +42,9 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import net.minecraftforge.common.*;
+import net.minecraftforge.event.terraingen.*;
+
 public abstract class BiomeGenBase
 {
     private static final Logger field_150586_aC = LogManager.getLogger();
@@ -58,7 +61,7 @@
     protected static final BiomeGenBase.Height field_150601_k = new BiomeGenBase.Height(0.1F, 0.8F);
     protected static final BiomeGenBase.Height field_150598_l = new BiomeGenBase.Height(0.2F, 0.3F);
     protected static final BiomeGenBase.Height field_150599_m = new BiomeGenBase.Height(-0.2F, 0.1F);
-    private static final BiomeGenBase[] field_76773_a = new BiomeGenBase[256];
+    private static final BiomeGenBase[] field_76773_a = new BiomeGenBase[4096];
     public static final Set field_150597_n = Sets.newHashSet();
     public static final BiomeGenBase field_76771_b = (new BiomeGenOcean(0)).func_76739_b(112).func_76735_a("Ocean").func_150570_a(field_150595_c);
     public static final BiomeGenBase field_76772_c = (new BiomeGenPlains(1)).func_76739_b(9286496).func_76735_a("Plains");
@@ -130,6 +133,10 @@
 
     public BiomeGenBase(int p_i1971_1_)
     {
+        this(p_i1971_1_, true);
+    }
+    public BiomeGenBase(int p_i1971_1_, boolean register)
+    {
         this.field_76752_A = Blocks.field_150349_c;
         this.field_150604_aj = 0;
         this.field_76753_B = Blocks.field_150346_d;
@@ -148,6 +155,7 @@
         this.field_76758_O = new WorldGenBigTree(false);
         this.field_76763_Q = new WorldGenSwamp();
         this.field_76756_M = p_i1971_1_;
+        if (register)
         field_76773_a[p_i1971_1_] = this;
         this.field_76760_I = this.func_76729_a();
         this.field_76762_K.add(new BiomeGenBase.SpawnListEntry(EntitySheep.class, 12, 4, 4));
@@ -163,11 +171,12 @@
         this.field_76761_J.add(new BiomeGenBase.SpawnListEntry(EntityWitch.class, 5, 1, 1));
         this.field_76755_L.add(new BiomeGenBase.SpawnListEntry(EntitySquid.class, 10, 4, 4));
         this.field_82914_M.add(new BiomeGenBase.SpawnListEntry(EntityBat.class, 10, 8, 8));
+        this.addDefaultFlowers();
     }
 
     public BiomeDecorator func_76729_a()
     {
-        return new BiomeDecorator();
+        return getModdedBiomeDecorator(new BiomeDecorator());
     }
 
     public BiomeGenBase func_76732_a(float p_76732_1_, float p_76732_2_)
@@ -335,7 +344,7 @@
     {
         double d0 = (double)MathHelper.func_76131_a(this.func_150564_a(p_150558_1_, p_150558_2_, p_150558_3_), 0.0F, 1.0F);
         double d1 = (double)MathHelper.func_76131_a(this.func_76727_i(), 0.0F, 1.0F);
-        return ColorizerGrass.func_77480_a(d0, d1);
+        return getModdedBiomeGrassColor(ColorizerGrass.func_77480_a(d0, d1));
     }
 
     @SideOnly(Side.CLIENT)
@@ -343,7 +352,7 @@
     {
         double d0 = (double)MathHelper.func_76131_a(this.func_150564_a(p_150571_1_, p_150571_2_, p_150571_3_), 0.0F, 1.0F);
         double d1 = (double)MathHelper.func_76131_a(this.func_76727_i(), 0.0F, 1.0F);
-        return ColorizerFoliage.func_77470_a(d0, d1);
+        return getModdedBiomeFoliageColor(ColorizerFoliage.func_77470_a(d0, d1));
     }
 
     public boolean func_150559_j()
@@ -490,6 +499,88 @@
         }
     }
 
+    /* ========================================= FORGE START ======================================*/
+    protected List<FlowerEntry> flowers = new ArrayList<FlowerEntry>();
+
+    public BiomeDecorator getModdedBiomeDecorator(BiomeDecorator original)
+    {
+        return new DeferredBiomeDecorator(original);
+    }
+
+    public int getWaterColorMultiplier()
+    {
+        BiomeEvent.GetWaterColor event = new BiomeEvent.GetWaterColor(this, field_76759_H);
+        MinecraftForge.EVENT_BUS.post(event);
+        return event.newColor;
+    }
+    
+    public int getModdedBiomeGrassColor(int original)
+    {
+        BiomeEvent.GetGrassColor event = new BiomeEvent.GetGrassColor(this, original);
+        MinecraftForge.EVENT_BUS.post(event);
+        return event.newColor;
+    }
+
+    public int getModdedBiomeFoliageColor(int original)
+    {
+        BiomeEvent.GetFoliageColor event = new BiomeEvent.GetFoliageColor(this, original);
+        MinecraftForge.EVENT_BUS.post(event);
+        return event.newColor;
+    }
+
+    /**
+     * Weighted random holder class used to hold possible flowers 
+     * that can spawn in this biome when bonemeal is used on grass.
+     */
+    public static class FlowerEntry extends WeightedRandom.Item
+    {
+        public final Block block;
+        public final int metadata;
+        public FlowerEntry(Block block, int meta, int weight)
+        {
+            super(weight);
+            this.block = block;
+            this.metadata = meta;
+        }
+    }
+
+    /**
+     * Adds the default flowers, as of 1.7, it is 2 yellow, and 1 red. I chose 10 to allow some wiggle room in the numbers.
+     */
+    public void addDefaultFlowers()
+    {
+        this.flowers.add(new FlowerEntry(Blocks.field_150327_N, 0, 20));
+        this.flowers.add(new FlowerEntry(Blocks.field_150328_O,    0, 10));
+    }
+
+    /** Register a new plant to be planted when bonemeal is used on grass.
+     * @param block The block to place.
+     * @param metadata The metadata to set for the block when being placed.
+     * @param weight The weight of the plant, where red flowers are
+     *               10 and yellow flowers are 20.
+     */
+    public void addFlower(Block block, int metadata, int weight)
+    {
+        this.flowers.add(new FlowerEntry(block, metadata, weight));
+    }
+
+    public void plantFlower(World world, Random rand, int x, int y, int z)
+    {
+        BiomeGenBase biome = world.func_72807_a(x, z);
+        String flowername = biome.func_150572_a(rand, x, y, z);
+        
+        FlowerEntry flower = (FlowerEntry)WeightedRandom.func_76271_a(rand, flowers);
+        if (flower == null || flower.block == null || !flower.block.func_149718_j(world, x, y, z))
+        {
+            return;
+        }
+
+        world.func_147465_d(x, y, z, flower.block, flower.metadata, 3);
+    }
+
+    
+    /* ========================================= FORGE END ======================================*/
+
     static
     {
         field_76772_c.func_150566_k();
@@ -519,8 +610,14 @@
         for (int var2 = 0; var2 < var1; ++var2)
         {
             BiomeGenBase var3 = var0[var2];
+            /* Biomes will be added to the exploration biome list if they are less than effective 128 within their
+             256-biome section of the list. Effectively repeats the vanilla 256-biome window over the larger range, so
+             for correct behavior use 0-127, 256-383, etc. for primary biomes and 128-255, 384-512, and so on for
+             sub-biomes.
 
-            if (var3 != null && var3.field_76756_M < 128)
+             Use special biomes 3800-4045 to add to the exploration list.*/
+
+            if ((var3 != null && var3.field_76756_M < 128) || (var3 != null && 3799<var3.field_76756_M && var3.field_76756_M<4044))
             {
                 field_150597_n.add(var3);
             }
